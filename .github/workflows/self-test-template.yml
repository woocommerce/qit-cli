name: Self Test Template

on:
  workflow_call:
    inputs:
      test_type:
        required: true
        type: string

    secrets:
      QIT_USER:
        required: true
      QIT_ACCESS_TOKEN:
        required: true
      QIT_STAGING_SECRET:
        required: true

jobs:
  self_test:
    runs-on: ubuntu-20.04
    env:
      NO_COLOR: 1
      QIT_DISABLE_ONBOARDING: yes

    steps:
      - name: Wait before request to avoid 429
        if: github.event_name != 'workflow_dispatch'
        run: |
          if [[ "${{ inputs.test_type }}" == "activation" ]]; then
            echo "Test type is activation. No wait."
          elif [[ "${{ inputs.test_type }}" == "api" ]]; then
            echo "Test type is api. Waiting 30 seconds."
            sleep 30
          elif [[ "${{ inputs.test_type }}" == "phpstan" ]]; then
            echo "Test type is phpstan. Waiting 60 seconds."
            sleep 60
          elif [[ "${{ inputs.test_type }}" == "security" ]]; then
            echo "Test type is security. Waiting 90 seconds."
            sleep 90
          elif [[ "${{ inputs.test_type }}" == "phpcompatibility" ]]; then
            echo "Test type is phpcompatibility. Waiting 120 seconds."
            sleep 120
          
          # E2E should always be last, as it takes long and uses queue slots.
          elif [[ "${{ inputs.test_type }}" == "e2e" ]]; then
            echo "Test type is e2e. Waiting 150 seconds."
            sleep 150
          
          else
            echo "Unknown test type. No wait."
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.2'

      - name: Composer install
        working-directory: _tests/managed_tests
        run: composer install

      - name: Composer install on Src
        working-directory: src
        run: composer install

      - name: Connect to QIT
        run: ./qit partner:add --user="${{ secrets.QIT_USER }}" --application_password="${{ secrets.QIT_ACCESS_TOKEN }}"

      #- name: Enable dev (Staging)
      #  run: ./qit dev

      #- name: Connect to QIT (Staging)
      #  run: ./qit backend:add --environment="staging" --qit_secret="${{ secrets.QIT_STAGING_SECRET }}" --manager_url="https://stagingcompatibilitydashboard.wpcomstaging.com"

      ### Cache ZIP Image
      - name: Set up date
        id: date
        run: |
          echo "ZIP_YEAR=$(date +'%Y')" >> $GITHUB_ENV
          echo "ZIP_MONTH=$(date +'%m')" >> $GITHUB_ENV

      - name: Restore ZIP Image Cache if it exists
        id: cache-docker-zip
        uses: actions/cache@v3
        with:
          path: cache-zip
          key: cache-docker-zip-${{ env.ZIP_YEAR }}-${{ env.ZIP_MONTH }}

      - name: Update ZIP Image Cache if cache miss
        if: steps.cache-docker-zip.outputs.cache-hit != 'true'
        run: docker pull joshkeegan/zip:latest && mkdir -p cache-zip && docker image save joshkeegan/zip:latest --output ./cache-zip/zip.tar

      - name: Use ZIP Image Cache if cache hit
        if: steps.cache-docker-zip.outputs.cache-hit == 'true'
        run: docker image load --input ./cache-zip/zip.tar
      ## <!-- End Cache ZIP Image -->

      - name: Run Self-Tests
        id: run-self-tests
        working-directory: _tests/managed_tests
        env:
          QIT_WAIT_BEFORE_REQUEST: yes
        run: php ./QITSelfTests.php run ${{ inputs.test_type }}
